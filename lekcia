import java.util.ArrayList;
import java.util.*;

public class Main {

    public static <T> void printUnique(Collection<T> items){
        Set<T> uniqueElements = new HashSet<>(items);

        for(T item : uniqueElements){
            System.out.println(item);
        }
    }

    public <T> ArrayList<T> mergeLists(ArrayList<T> first, ArrayList<T> second){
        ArrayList<T> merged = new ArrayList<>();

        merged.addAll(first);
        merged.addAll(second);

        return merged;
    }

    public static <T> TreeSet<T> findElementsInRange(TreeSet<T> treeset, T lowerBound, T upperBound){
        TreeSet<T> wynik = new TreeSet<>();
        for(T item : treeset){
            if(item.hashCode()>=lowerBound.hashCode() && item.hashCode()<=upperBound.hashCode()){
                wynik.add(item);
            }
        }
        return wynik;
    }

    public static <T> boolean isPalindrome(LinkedList<T> list){
        if(list.size() <= 1){
            return true;
        }
        int left = 0;
        int right = list.size() - 1;
        while(left < right){
            if(!list.get(left).equals(list.get(right))){
                return false;
            }
            left++;
            right--;
        }
        return true;
    }


    public static void main(String[] args) {
        LinkedList<String> list = new LinkedList<>();

//        list.add("kajak");
//        list.add("kaktus");
//        list.add("kajak");

        System.out.println(isPalindrome(list));

//        TreeSet<Integer> treeSet = new TreeSet<>();

//        treeSet.add(1);
//        treeSet.add(2);
//        treeSet.add(3);
//        treeSet.add(4);
//        treeSet.add(5);
//        treeSet.add(6);
//        treeSet.add(7);
//        treeSet.add(8);
//        treeSet.add(9);
//
//        System.out.println(findElementsInRange(treeSet,4,7));

        //System.out.println(isPalindrome(list));


//        ArrayList<String> list = new ArrayList<>();
//        list.add("b");
//        list.add("b");


//        printUnique(list);
    }
}
